[{"D:\\projects\\Slew\\client\\src\\index.js":"1","D:\\projects\\Slew\\client\\src\\App.js":"2","D:\\projects\\Slew\\client\\src\\reportWebVitals.js":"3","D:\\projects\\Slew\\client\\src\\serviceWorker.js":"4","D:\\projects\\Slew\\client\\src\\components\\Landing.js":"5","D:\\projects\\Slew\\client\\src\\components\\ChatRoom.js":"6","D:\\projects\\Slew\\client\\src\\socket.js":"7"},{"size":577,"mtime":1609229498642,"results":"8","hashOfConfig":"9"},{"size":468,"mtime":1609097853438,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":5040,"mtime":1609128292626,"results":"12","hashOfConfig":"9"},{"size":4158,"mtime":1609430637161,"results":"13","hashOfConfig":"9"},{"size":28867,"mtime":1610026214053,"results":"14","hashOfConfig":"9"},{"size":128,"mtime":1610026328482,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"4tljnn",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\Slew\\client\\src\\index.js",[],["32","33"],"D:\\projects\\Slew\\client\\src\\App.js",[],"D:\\projects\\Slew\\client\\src\\reportWebVitals.js",[],"D:\\projects\\Slew\\client\\src\\serviceWorker.js",[],"D:\\projects\\Slew\\client\\src\\components\\Landing.js",["34"],"import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport './Landing.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { socket } from '../socket';\r\n\r\nfunction Landing() {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [privacy, setPrivacy] = useState(false);\r\n    const [joinIsOpen, setJoinIsOpen] = useState(false);\r\n    const [pass, setPass] = useState('');\r\n    const [slewName, setSlewName] = useState('');\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (privacy == false) {\r\n            var id = uuidv4();\r\n            window.location.href = '/room/' + id;\r\n        } else {\r\n            socket.emit('create-private-room', {\r\n                slewName: slewName,\r\n                pass: pass\r\n            });\r\n            window.location.href = '/room/' + slewName;\r\n        }\r\n    }\r\n\r\n    const joinHandler = (e) => {\r\n        e.preventDefault();\r\n        window.location.href = '/room/' + slewName\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"Landing\">\r\n            <Modal\r\n                isOpen={isOpen}\r\n                style={{\r\n                    overlay: { backgroundColor: 'rgb(27, 27, 27)', opacity: '0.98' }\r\n                }}\r\n                className=\"create-join-modal\"\r\n                onRequestClose={() => {\r\n                    setIsOpen(false);\r\n                }}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <form className=\"create-join-form\" onSubmit={submitHandler}>\r\n                <div className=\"slew-privacy\">\r\n                        <div onClick={() => { setPrivacy(true) }} className={privacy ? \"private-highlight\" : \"private\"}>Private</div>\r\n                        <div onClick={() => { setPrivacy(false) }} className={!privacy ? \"public-highlight\" : \"public\"}>Public</div>\r\n                    </div>\r\n                    {\r\n                        privacy ? (\r\n                    <div className=\"slew-name\">\r\n                        <label htmlFor=\"slew-name\">Slew Name</label>\r\n                        <input placeholder=\"Slew Name\" onChange={(e) => { setSlewName(e.target.value) }} value={slewName} type=\"text\" />\r\n                    </div>\r\n                        ) : (\r\n                            null\r\n                        )\r\n                    }\r\n                    \r\n                    \r\n                    {\r\n                        (privacy) ? (\r\n                            <div className=\"slew-pass\">\r\n                                <label htmlFor=\"slew-pass\">Setup a password:</label>\r\n                                <input placeholder=\"Password\" onChange={(e) => { setPass(e.target.value) }} value={pass} type=\"password\" />\r\n                            </div>\r\n                        ) : null\r\n                    }\r\n                    <button type=\"submit\">Create</button>\r\n                </form>\r\n            </Modal>\r\n            <Modal\r\n                isOpen={joinIsOpen}\r\n                style={{\r\n                    overlay: { backgroundColor: 'rgb(27, 27, 27)', opacity: '0.98' }\r\n                }}\r\n                className=\"create-join-modal\"\r\n                onRequestClose={() => {\r\n                    setJoinIsOpen(false);\r\n                }}\r\n                contentLabel=\"Example Modal\">\r\n\r\n                <form className=\"join-form\" onSubmit={joinHandler}>\r\n                    <div className=\"slew-name\">\r\n                        <label htmlFor=\"slew-name\">Slew Name</label>\r\n                        <input placeholder=\"Slew Name\" onChange={(e) => { setSlewName(e.target.value) }} value={slewName} type=\"text\" />\r\n                    </div>\r\n                    <button type=\"submit\">Join</button>\r\n                </form>\r\n            </Modal>\r\n            <div className=\"button-group\">\r\n                <button className=\"create-btn\" onClick={() => {\r\n                    setIsOpen(true);\r\n                }}>Create Slew</button>\r\n                <button onClick={() => {\r\n                    setJoinIsOpen(true);\r\n                }} className=\"join-btn\">Join Slew</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing;\r\n","D:\\projects\\Slew\\client\\src\\components\\ChatRoom.js",["35","36","37","38","39","40","41","42","43","44","45","46","47","48","49"],"D:\\projects\\Slew\\client\\src\\socket.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":17,"column":21,"nodeType":"56","messageId":"57","endLine":17,"endColumn":23},{"ruleId":"58","severity":1,"message":"59","line":31,"column":12,"nodeType":"60","messageId":"61","endLine":31,"endColumn":22},{"ruleId":"58","severity":1,"message":"62","line":44,"column":12,"nodeType":"60","messageId":"61","endLine":44,"endColumn":20},{"ruleId":"58","severity":1,"message":"63","line":46,"column":27,"nodeType":"60","messageId":"61","endLine":46,"endColumn":43},{"ruleId":"64","severity":1,"message":"65","line":119,"column":8,"nodeType":"66","endLine":119,"endColumn":10,"suggestions":"67"},{"ruleId":"54","severity":1,"message":"55","line":122,"column":37,"nodeType":"56","messageId":"57","endLine":122,"endColumn":39},{"ruleId":"54","severity":1,"message":"55","line":122,"column":60,"nodeType":"56","messageId":"57","endLine":122,"endColumn":62},{"ruleId":"54","severity":1,"message":"55","line":147,"column":42,"nodeType":"56","messageId":"57","endLine":147,"endColumn":44},{"ruleId":"68","severity":1,"message":"69","line":180,"column":24,"nodeType":"60","messageId":"70","endLine":180,"endColumn":28},{"ruleId":"54","severity":1,"message":"55","line":197,"column":60,"nodeType":"56","messageId":"57","endLine":197,"endColumn":62},{"ruleId":"54","severity":1,"message":"55","line":274,"column":25,"nodeType":"56","messageId":"57","endLine":274,"endColumn":27},{"ruleId":"54","severity":1,"message":"71","line":387,"column":49,"nodeType":"56","messageId":"57","endLine":387,"endColumn":51},{"ruleId":"54","severity":1,"message":"55","line":404,"column":44,"nodeType":"56","messageId":"57","endLine":404,"endColumn":46},{"ruleId":"54","severity":1,"message":"55","line":570,"column":68,"nodeType":"56","messageId":"57","endLine":570,"endColumn":70},{"ruleId":"54","severity":1,"message":"55","line":581,"column":72,"nodeType":"56","messageId":"57","endLine":581,"endColumn":74},{"ruleId":"54","severity":1,"message":"55","line":654,"column":45,"nodeType":"56","messageId":"57","endLine":654,"endColumn":47},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'isAudioRec' is assigned a value but never used.","Identifier","unusedVar","'datetime' is assigned a value but never used.","'setOtherPeerName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'displayNotification'. Either include it or remove the dependency array.","ArrayExpression",["74"],"no-self-assign","'call' is assigned to itself.","selfAssignment","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [displayNotification]",{"range":"77","text":"78"},[4354,4356],"[displayNotification]"]